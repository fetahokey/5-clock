{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["App","BREAK","SESSION","useState","breakLength","setBreakLength","sessionLength","setSessionLength","value","type","timer","setTimer","isRunning","setIsRunning","audioBeep","setAudioBeep","timerId","startDecTimer","prevStat","play","useEffect","clearInterval","setInterval","Box","className","id","display","width","flexWrap","border","alignSelf","pl","flex","Typography","IconButton","onClick","prevState","disabled","ArrowDropUp","ArrowDropDown","actState","prevTimerState","ss","mms","parseInt","toString","sss","length","concat","formatTimer","PlayArrow","Pause","pause","currentTime","Replay","preload","ref","audio","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d59741d.chunk.js","sourcesContent":["import {\n  ArrowDropDown,\n  ArrowDropUp,\n  Pause,\n  PlayArrow,\n  Replay,\n} from \"@mui/icons-material\";\nimport { IconButton, Typography } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nconst App = () => {\n  const MAX = 60,\n    MIN = 1,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    MAX_TIMER = 3600,\n    MIN_TIMER = 0,\n    BREAK = \"Break\",\n    SESSION = \"Session\";\n\n  const [breakLength, setBreakLength] = useState(5);\n  const [sessionLength, setSessionLength] = useState(25);\n  const [timer, setTimer] = useState<{ value: number; type: string }>({\n    value: 1500,\n    type: SESSION,\n  });\n  const [isRunning, setIsRunning] = useState(false);\n  const [audioBeep, setAudioBeep] = useState<HTMLAudioElement | null>(null);\n\n  let timerId: any = null;\n\n  const startDecTimer = () => {\n    setTimer((prevStat) => {\n      if (prevStat.value === 0) {\n        audioBeep?.play();\n        if (prevStat.type === SESSION) {\n          const returnState = {\n            value: breakLength * 60,\n            type: BREAK,\n          };\n          return returnState;\n        }\n        if (prevStat.type === BREAK) {\n          const returnState = {\n            value: sessionLength * 60,\n            type: SESSION,\n          };\n          return returnState;\n        }\n      }\n\n      const returnState = {\n        value: prevStat.value > MIN_TIMER ? prevStat.value - 1 : prevStat.value,\n        type: prevStat.type,\n      };\n      return returnState;\n    });\n  };\n\n  useEffect(() => {\n    if (!isRunning) {\n      clearInterval(timerId);\n    }\n\n    if (isRunning) {\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      timerId = setInterval(startDecTimer, 1000);\n    }\n    return () => {\n      clearInterval(timerId);\n    };\n  }, [isRunning]);\n\n  const formatTimer = (timer: number): string => {\n    const nmm = timer / 60;\n    const mm = parseInt(nmm.toString());\n    const ss = timer % 60;\n    let mms = mm.toString();\n    let sss = ss.toString();\n    mms = mms.length === 1 ? \"0\".concat(mms) : mms;\n    sss = sss.length === 1 ? \"0\".concat(sss) : sss;\n    return `${mms}:${sss}`;\n  };\n\n  const handleReset = () => {\n    setIsRunning(false);\n    setBreakLength(5);\n    setSessionLength(25);\n    setTimer({ value: 1500, type: SESSION });\n    if (audioBeep) {\n      audioBeep.pause();\n      audioBeep.currentTime = 0;\n    }\n  };\n\n  //  break increment / decrement\n  const handleBreakIncrement = () => {\n    setBreakLength((prevState) =>\n      prevState < MAX ? prevState + 1 : prevState\n    );\n  };\n\n  const handleBreakDecrement = () => {\n    setBreakLength((prevState) =>\n      prevState > MIN ? prevState - 1 : prevState\n    );\n  };\n\n  //session increment/decrement\n  const handleSessionIncrement = () => {\n    setSessionLength((prevState) => {\n      const actState = prevState < MAX ? prevState + 1 : prevState;\n      setTimer((prevTimerState) => ({\n        value: actState * 60,\n        type: prevTimerState.type,\n      }));\n      return actState;\n    });\n  };\n\n  const handleSessionDecrement = () => {\n    setSessionLength((prevState) => {\n      const actState = prevState > MIN ? prevState - 1 : prevState;\n      setTimer((prevTimerState) => ({\n        value: actState * 60,\n        type: prevTimerState.type,\n      }));\n      return actState;\n    });\n  };\n\n  const handlePlayPause = () => {\n    setIsRunning((prevState) => !prevState);\n  };\n\n  return (\n    <Box\n      className=\"App\"\n      id=\"5-clock\"\n      display=\"flex\"\n      width=\"400px\"\n      flexWrap=\"wrap\"\n      border={1}\n      alignSelf=\"center\"\n      pl={50}\n    >\n      <Box flex={6} border={2}>\n        <Typography id=\"break-label\">Break </Typography>\n        <IconButton\n          id=\"break-increment\"\n          onClick={handleBreakIncrement}\n          disabled={isRunning}\n        >\n          <ArrowDropUp />\n        </IconButton>\n        <Typography id=\"break-length\">{breakLength}</Typography>\n        <IconButton\n          id=\"break-decrement\"\n          onClick={handleBreakDecrement}\n          disabled={isRunning}\n        >\n          <ArrowDropDown />\n        </IconButton>\n      </Box>\n      <Box flex={6} border={2}>\n        <Typography id=\"session-label\">Session </Typography>\n        <IconButton\n          id=\"session-increment\"\n          onClick={handleSessionIncrement}\n          disabled={isRunning}\n        >\n          <ArrowDropUp />\n        </IconButton>\n        <Typography id=\"session-length\">{sessionLength}</Typography>\n        <IconButton\n          id=\"session-decrement\"\n          onClick={handleSessionDecrement}\n          disabled={isRunning}\n        >\n          <ArrowDropDown />\n        </IconButton>\n      </Box>\n      <Box flex={12}>\n        <Typography id=\"timer-label\">{timer.type}</Typography>\n        <Typography id=\"time-left\">{formatTimer(timer.value)}</Typography>\n\n        <IconButton id=\"start_stop\" aria-label=\"\" onClick={handlePlayPause}>\n          <PlayArrow />\n          <Pause />\n        </IconButton>\n\n        <IconButton id=\"reset\" aria-label=\"\" onClick={handleReset}>\n          <Replay />\n        </IconButton>\n\n        <audio\n          id=\"beep\"\n          preload=\"auto\"\n          ref={(audio) => {\n            setAudioBeep(audio);\n          }}\n          src=\"https://raw.githubusercontent.com/freeCodeCamp/cdn/master/build/testable-projects-fcc/audio/BeepSound.wav\"\n        />\n      </Box>\n    </Box>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}